FROM docker.io/rust:alpine3.19 as chef
WORKDIR /app
RUN apk update && apk add lld clang17 pkgconfig openssl-dev openssl-libs-static
RUN cargo install cargo-chef


FROM chef as planner
COPY . .
# Compute a lock-like file for our project
RUN cargo chef prepare --recipe-path recipe.json

FROM chef as builder
COPY --from=planner /app/recipe.json recipe.json
# Build our project dependencies, not our application!
RUN cargo chef cook --release --recipe-path recipe.json
# Up to this point, if our dependency tree stays the same,
# all layers should be cached.
COPY . .
ENV SQLX_OFFLINE true
# Build our project
RUN cargo build --release --bin actix_learning
FROM docker.io/alpine:3.19.1 AS runtime
WORKDIR /app
RUN apk add openssl ca-certificates
COPY --from=builder /app/target/release/actix_learning actix_learning
COPY configuration configuration
ENV APP_ENVIRONMENT production
ENTRYPOINT ["./actix_learning"]
